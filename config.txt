----------------------------------application.xml----------------------------------


server:
  port: 9908


#定义日志的根和具体category的级别
#logging:
#  level:
#    root: DEBUG
#    com.wsun.springcloud.service.user: DEBUG


#Spring Boot Admin Server监控应用时需要提供版本号
#以@节点标签@读取pom.xml中的值,需build中加入插件spring-boot-maven-plugin
info:
  version: @project.version@


spring:
  cloud:
    config:
      server:
        git:
          uri: E:\github\spring-cloud-demo
#          uri: https://github.com/wsv8088/spring-cloud-demo.git
          #每个存储库还可以选择将配置文件存储在子目录中,通过该参数指定子目录,支持多个文件夹,中间用英文','分隔
          searchPaths: cloud-config-repo


#定义日志的根和具体category的级别
#logging:
#  level:
#    root: DEBUG
#    com.wsun.springcloud.service.user: DEBUG


----------------------------------bootstrap.xml----------------------------------

#访问的根路径
server:
  contextPath: /api

spring:
  application:
    name: cloud-service-user
  #ConfigClientProperties资源类中spring.cloud.config.enable属性默认为true
  #spring.cloud.config.uri的默认值为:http://localhost:8888
  #所以在不声明关闭此参数时,服务会默认从ConfigServer拉取配置
  cloud:
    config:
      failFast: true
      uri: http://${config.host:localhost}:${config.port:8888}
  profiles:
    active: ${config.active:dev}

  #指定monitor的地址,让当前应用被Admin监控
  #最新版本已经不需要此配置,SBA会自动从Eureka服务端拉取
  boot:
    admin:
      client:
        preferIp: true
      url: http://${admin.monitor.host:localhost}:${admin.monitor.host::8050}


eureka:
  client:
    #是否向注册中心注册自己的服务
    registerWithEureka: true
    #是否从服务注册中心拉取注册信息
    #这个应用本身就是Eureka Server,不需要向注册中心注册自己的服务,所以要关闭这个开关
    fetchRegistry: true
    #指定服务注册中心的位置
    serviceUrl:
    #key:value的意思是如果找不到eureka.host定义的值,就使用:后面的值
      default: http://${eureka.host:localhost}:${eureka.port:8761}/eureka/
    #表示eureka client间隔多久去拉取服务注册信息,默认为30秒,对于api-gateway,如果要迅速获取服务注册状态,可以缩小该值,比如5秒
    registry-fetch-interval-seconds: 30
  instance:
      #当微服务修改ContextPath属性性,需要重新用以下两个参数定义info和health接口的path
      statusPageUrlPath: ${server.contextPath}/info
      healthCheckUrlPath: ${server.contextPath}/health
      hostname: localhost
      #Eureka客户端向注册中心发送心跳的间隔时间,默认30秒
      leaseRenewalIntervalInSeconds: 30
      #Eureka服务端在收到最后一次收到心跳之后等待的时间上限，如果超过这个时间,默认90秒
      #超过这个时间,服务端将会从该服务实例从可用实例清单中剔除,从而禁止服务调用请求被发送到此实例上
      leaseExpirationDurationInSeconds: 90
      #是否优先使用IP地址作为主机名的标识
      preferIpAddress: true
      metadataMap:
        instanceId: ${spring.application.name}:${random.value}

#spring-boot 1.5.2之后严格执行安全策略,所以需要配置这个为false
#访问acurator组件的监控指标时不需要身份认证
management:
  security:
    enabled: false



#actuator组件暴露的health接口权限是由两个配置： management.security.enabled 和 endpoints.health.sensitive组合的结果进行返回的。
#同理,metrics接口权限是由两个配置： management.security.enabled 和 endpoints.metrics.sensitive组合的结果进行返回的。

#security.basic.enabled=true
#security.basic.path=/admin               #针对/admin路径进行认证
#security.user.name=admin                 #认证使用的用户名
#security.user.password=password          #认证使用的密码
#management.security.roles=SUPERUSER
#
#management.port=11111   #actuator        暴露接口使用的端口，为了和api接口使用的端口进行分离
#management.context-path=/admin           #actuator暴露接口的前缀
#management.security.enabled=true         #actuator是否需要安全保证
#
#endpoints.metrics.sensitive=false        #actuator的metrics接口是否需要安全保证
#endpoints.metrics.enabled=true
#
#endpoints.health.sensitive=false         #actuator的health接口是否需要安全保证
#endpoints.health.enabled=true


